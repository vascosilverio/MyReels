{
	"id": "c7ab20b5-945d-494e-b2b0-0552c3de9760",
	"createdAt": "2024-08-03T06:04:39.615Z",
	"createdBy": "admin",
	"globalScripts": [],
	"externalModules": [],
	"entitySets": [
		{
			"id": "7850ec31-7369-4a8b-a109-2b0d773cc88f",
			"name": "collections",
			"contextname": "collections"
		}
	],
	"apis": [],
	"name": "getReviews",
	"ver": "24.8.5.521",
	"description": null,
	"content": [
		"==OBJECT STRING==",
		"const data = req.body;\r",
		"if (!req.user) {\r",
		"    log.error(\"User not authenticated\");\r",
		"    return fail(\"User not authenticated\");\r",
		"}\r",
		"const user = req.user.id;\r",
		"\r",
		"try {\r",
		"    const table = entities.collections;\r",
		"    const querry = await table.find({\r",
		"        select: [\r",
		"            \"id\",\r",
		"            \"userId\",\r",
		"            \"movieId\",\r",
		"            \"rating\",\r",
		"            \"review\",\r",
		"            \"favourite\",\r",
		"            \"wishlist\",\r",
		"            \"private\",\r",
		"            \"title\",\r",
		"            \"release_date\",\r",
		"            \"genre\",\r",
		"            \"review_check\"], where: { userId: user, }, take: 100, cache: false,\r",
		"    }); console.log(\"Query response:\", querry);\r",
		"\r",
		"    const jsonResponse = querry.map(item => ({ ...item, release_date: item.release_date ? item.release_date.toISOString() : null, genre: item.genre ? JSON.parse(item.genre) : null })); result.data = jsonResponse; console.log(\"Returning JSON:\", JSON.stringify(result));\r",
		"} catch (error) { log.error(\"Error in request: \", error); return fail(); }\r",
		""
	],
	"useAsGlobalScript": false,
	"isTypescript": false,
	"transpiledContent": null,
	"lastRunSuccessful": false,
	"jsscriptGroup": "e622eec3-a958-4eed-8b27-4c853af7aaee",
	"package": "cea714f9-70c7-451c-8090-517e9e6854f8"
}