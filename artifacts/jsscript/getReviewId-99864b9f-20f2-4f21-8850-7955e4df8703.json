{
	"id": "99864b9f-20f2-4f21-8850-7955e4df8703",
	"createdAt": "2024-08-04T20:02:47.760Z",
	"createdBy": "admin",
	"globalScripts": [],
	"externalModules": [],
	"entitySets": [
		{
			"id": "7850ec31-7369-4a8b-a109-2b0d773cc88f",
			"name": "collections",
			"contextname": "collections"
		}
	],
	"apis": [],
	"name": "getReviewId",
	"ver": "24.8.4.2028",
	"description": null,
	"content": [
		"==OBJECT STRING==",
		"const data = req.body;\r",
		"\r",
		"if (!req.user) {\r",
		"    log.error(\"User not authenticated\");\r",
		"    return fail(\"User not authenticated\");\r",
		"}\r",
		"\r",
		"const user = req.user.id;\r",
		"const movieIdToQuery = req.params.movieId;\r",
		"log.error(movieIdToQuery);\r",
		"try {\r",
		"    const table = entities.collections;\r",
		"\r",
		"    const query = await table.findOne({\r",
		"        select: [\r",
		"            \"userId\",\r",
		"            \"movieId\",\r",
		"            \"rating\",\r",
		"            \"review\",\r",
		"            \"favourite\",\r",
		"            \"wishlist\",\r",
		"            \"private\",\r",
		"            \"title\",\r",
		"            \"release_date\",\r",
		"            \"genre\",\r",
		"            \"review_check\"\r",
		"        ],\r",
		"        where: { \r",
		"            userId: user, \r",
		"            movieId: movieIdToQuery \r",
		"        },\r",
		"        cache: false,\r",
		"    });\r",
		"\r",
		"    console.log(\"Query response:\", query);\r",
		"\r",
		"    if (!query) {\r",
		"        return {\r",
		"            success: false,\r",
		"            message: \"No review found for the specified movie and user\"\r",
		"        };\r",
		"    }\r",
		"\r",
		"    const jsonResponse = {\r",
		"        ...query,\r",
		"        release_date: query.release_date ? query.release_date.toISOString() : null,\r",
		"        genre: query.genre ? JSON.parse(query.genre) : null\r",
		"    };\r",
		"\r",
		"    result.data = jsonResponse;\r",
		"    console.log(\"Returning JSON:\", JSON.stringify(result));\r",
		"\r",
		"\r",
		"} catch (error) {\r",
		"    log.error(\"Error in request: \", error);\r",
		"    return fail(error.message || \"An error occurred while fetching the data\");\r",
		"}"
	],
	"useAsGlobalScript": false,
	"isTypescript": false,
	"transpiledContent": null,
	"lastRunSuccessful": false,
	"jsscriptGroup": "27086dd0-9278-4f29-8d0e-15aee917d8c2",
	"package": "cea714f9-70c7-451c-8090-517e9e6854f8"
}